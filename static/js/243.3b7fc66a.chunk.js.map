{"version":3,"file":"static/js/243.3b7fc66a.chunk.js","mappings":"0KACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAiN,yBAAjN,EAAmP,wB,mBCcnP,EAVmB,SAAH,GAAmB,IAAdA,EAAI,EAAJA,KAAMC,EAAE,EAAFA,GACjBC,EAAI,mBAAeD,GACzB,OACI,iBAAKE,UAAWC,EAAW,IAAMA,EAAS,WACtC,gBAAKC,IAAK,SAAUF,UAAWC,EAAUE,IAAI,iEAC7C,SAACC,EAAA,EAAO,CAACC,GAAIN,EAAK,SAAEF,MAGhC,ECFA,EARgB,SAAH,GAAmB,IAAdS,EAAO,EAAPA,QACd,OACI,gBAAKN,UAAWC,EAAU,SACrBK,GAGb,E,uCCDMC,GAAcC,EAAAA,EAAAA,GAAiB,IAoC/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAK,6BAAhBD,EAZE,SAACE,GAC3B,OACI,kBAAMC,SAAUD,EAAME,aAAa,WAC/B,0BACI,SAACC,EAAA,EAAK,CAACC,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,EAAUZ,GAAcV,KAAM,iBAAkBuB,YAAY,0BAEvG,0BACI,4BAAQ,+DAIxB,IAKA,EAvCgB,SAAH,GAAoC,IAA/BC,EAAW,EAAXA,YAAaC,EAAW,EAAXA,YAKrBC,EAAiBD,EAAYE,QAAQC,KAAK,SAAAC,GAAC,OAAI,SAAC,EAAU,CAAC7B,KAAM6B,EAAE7B,KAAMC,GAAI4B,EAAE5B,IAAS4B,EAAE5B,GAAK,IAC/F6B,EAAmBL,EAAYM,SAASH,KAAK,SAAAI,GAAC,OAAI,SAAC,EAAO,CAACvB,QAASuB,EAAEvB,QAASR,GAAI+B,EAAE/B,IAAS+B,EAAE/B,GAAK,IAE3G,OACI,iBAAKE,UAAWC,EAAU,WACtB,gBAAKD,UAAWC,EAAe,SAC1BsB,KAGL,iBAAKvB,UAAWC,EAAW,WACvB,yBAAM0B,KACN,SAAClB,EAAmB,CAACI,SAdX,SAACiB,GACnBT,EAAYS,EAAOC,eACvB,SAiBJ,E,oEC1BMC,EAA6B,SAACC,GAAK,MAAM,CAC3CC,OAAOD,EAAME,KAAKD,OACrB,ECoBKE,GAAmBC,E,QAAAA,KACrBC,EAAAA,EAAAA,KApBoB,SAACL,GACrB,MAAO,CACPX,YAAaW,EAAMX,YAGvB,IAE2B,SAACiB,GACxB,MAAO,CACHlB,YAAc,SAACU,GACXQ,GAASC,EAAAA,EAAAA,GAAmBT,GAChC,EAER,KDbgC,SAACU,GAAe,IACtCC,EAAiB,qGAIlB,OAJkB,8BACnB,WACI,OAAKC,KAAK/B,MAAMsB,QACT,SAACO,GAAS,UAAKE,KAAK/B,SADI,SAACgC,EAAA,EAAQ,CAACvC,GAAI,UAEjD,KAAC,EAJkB,CAAUwC,EAAAA,WAWjC,OAFmCP,EAAAA,EAAAA,IAAQN,EAARM,CAAoCI,EAG3E,GCMyBL,CAGvBS,GAEF,G","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__Q14zS\",\"dialogsItems\":\"Dialogs_dialogsItems__cwDPS\",\"active\":\"Dialogs_active__pPKaE\",\"dialog\":\"Dialogs_dialog__oSE4V\",\"messages\":\"Dialogs_messages__+3OWv\",\"message\":\"Dialogs_message__ICt6Q\",\"avatar\":\"Dialogs_avatar__umVB8\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = ({name, id}) =>{\r\n    const path = `/dialogs/${id}`\r\n    return(\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <img alt={\"avatar\"} className={s.avatar} src=\"https://cs13.pikabu.ru/avatars/3087/x3087079-1757670128.png\"/>\r\n            <NavLink to={path}>{name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\"\r\n\r\nconst Message = ({message}) => {\r\n    return(\r\n        <div className={s.message}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nconst maxLength30 = maxLengthCreator(30)\r\nconst Dialogs = ({sendMessage, dialogsPage}) => {\r\n\r\n    const addNewMessage = (values) => {\r\n        sendMessage(values.newMessageBody)\r\n    }\r\n    const dialogElements = dialogsPage.dialogs.map( d => <DialogItem name={d.name} id={d.id} key={d.id}/>)\r\n    const messagesElements = dialogsPage.messages.map( m => <Message message={m.message} id={m.id} key={m.id}/>)\r\n\r\n    return(\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const AddMessageForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength30]} name={\"newMessageBody\"} placeholder=\"Enter your message\" />\r\n            </div>\r\n            <div>\r\n                <button>Отправить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageFormRedux = reduxForm({form:\"dialogAddMessageFormRedux\"})(AddMessageForm)\r\n\r\n\r\n\r\nexport default Dialogs","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth:state.auth.isAuth\r\n})\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends  React.Component{\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent\r\n}","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    dialogsPage: state.dialogsPage,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage : (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// const AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\r\n\r\nconst DialogsContainer = compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\nexport default DialogsContainer"],"names":["name","id","path","className","s","alt","src","NavLink","to","message","maxLength30","maxLengthCreator","AddMessageFormRedux","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","sendMessage","dialogsPage","dialogElements","dialogs","map","d","messagesElements","messages","m","values","newMessageBody","mapStateToPropsForRedirect","state","isAuth","auth","DialogsContainer","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","Redirect","React","Dialogs"],"sourceRoot":""}