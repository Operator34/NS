{"version":3,"file":"static/js/271.1dcd95cf.chunk.js","mappings":"oOACA,EAA0D,4BAA1D,EAAwG,qCAAxG,EAA+J,qCAA/J,EAA+M,8BAA/M,EAAuP,6BAAvP,EAAgS,+B,miBCAhS,EAA8B,2B,SCmC9B,EA1BqB,SAAH,GAAqB,IAAfA,EAAQ,EAARA,SACdC,GAAW,UAAOD,GACxB,IAAK,IAAME,KAAOD,EACiB,iBAApBA,EAAYC,WACZD,EAAYC,GAI3B,OACI,+BACA,gBAAKC,UAAWC,EAAc,SACrBC,OAAOC,QAAQL,GAAaM,KAAI,SAAAC,GAC7B,OAAOA,EAAK,IACR,IAAK,WAAa,OAAO,cAAWC,KAAI,kBAAaD,EAAK,IAAK,UAAC,gBAAKE,IAAK,WAAYC,IAAKC,KAA1D,GACjC,IAAK,UAAY,OAAO,cAAWH,KAAI,kBAAaD,EAAK,IAAK,UAAC,gBAAKE,IAAK,UAAWC,IAAKE,KAAzD,GAChC,IAAK,UAAY,OAAO,cAAWJ,KAAI,kBAAaD,EAAK,IAAK,UAAC,gBAAKE,IAAK,UAAWC,IAAKG,KAAzD,GAChC,IAAK,YAAc,OAAO,cAAWL,KAAI,kBAAaD,EAAK,IAAK,UAAC,gBAAKE,IAAK,YAAaC,IAAKI,KAA3D,GAClC,IAAK,UAAY,OAAO,cAAWN,KAAI,kBAAaD,EAAK,IAAK,UAAC,gBAAKE,IAAK,UAAWC,IAAKK,KAAzD,GAChC,IAAK,SAAW,OAAO,cAAWP,KAAI,kBAAaD,EAAK,IAAK,UAAC,gBAAKE,IAAK,SAAUC,IAAKM,KAAxD,GAC/B,IAAK,KAAO,OAAO,cAAWR,KAAI,kBAAaD,EAAK,IAAK,UAAC,gBAAKE,IAAK,KAAMC,IAAKO,KAApD,GAEnC,OAIhB,E,SCMA,EAtC+B,SAACC,GAE5B,OAAgCC,EAAAA,EAAAA,WAAS,GAAM,eAAxCC,EAAQ,KAAEC,EAAW,KAC5B,GAA4BF,EAAAA,EAAAA,UAASD,EAAMI,QAAO,eAA3CA,EAAM,KAAEC,EAAS,MAExBC,EAAAA,EAAAA,YAAU,WACND,EAAUL,EAAMI,OACpB,GAAE,CAACJ,EAAMI,SAcT,OACI,iCACMF,IACE,0BACI,iBAAMK,cAhBG,WACrBJ,GAAY,EAChB,EAcsD,SAAGH,EAAMI,QAAU,gBAGhEF,IACG,0BACI,kBAAOM,SAZA,SAACC,GACpBJ,EAAUI,EAAEC,cAAcC,MAC9B,EAUiDC,OAjBtB,WACvBT,GAAY,GACZH,EAAMa,aAAaT,EACvB,EAc6EU,WAAW,EACjEH,MAAOP,QAKlC,ECDA,EA5BoB,SAAH,GAAyC,IAApCW,EAAO,EAAPA,QAASX,EAAM,EAANA,OAAQS,EAAY,EAAZA,aAGvC,OAAIE,GAII,0BACI,iBAAK/B,UAAWC,EAAkB,WAC9B,gBAAKM,IAAK,SAAUP,UAAWC,EAAUO,IAAKuB,EAAQC,OAAOC,MAAQF,EAAQC,OAAOC,MAAQC,KAC5F,iBAAKlC,UAAWC,EAAkB,WAC9B,iBAAMD,UAAWC,EAAW,SAAE8B,EAAQI,YACtC,SAAC,EAAsB,CACnBf,OAAUA,EACVS,aAAgBA,KAEpB,iBAAM7B,UAAWC,EAAU,0DAAc8B,EAAQK,YACjD,gBAAK7B,IAAK,MAAOP,UAAWC,EAAaO,IAAMuB,EAAQM,eAAiBC,EAAYC,KACpF,SAAC,EAAY,CAACC,KAAMT,EAAQlC,SAASc,QACvBd,SAAUkC,EAAQlC,oBAfzC,SAAC4C,EAAA,EAAS,GAsBrB,E,oBCnCA,EAA6B,4BAA7B,EAAiE,uBCAjE,EAAuB,mBCiBvB,EAhBa,SAAH,GAA8B,IAAzBC,EAAO,EAAPA,QAASC,EAAS,EAATA,UACpB,OACQ,0BACI,iBAAK3C,UAAWC,EAAO,WACnB,gBAAKO,IAAI,4DAA4DD,IAAI,WACxEmC,GACD,0BACI,4BAAM,SAAOC,WAOrC,E,uCCPMC,GAAcC,EAAAA,EAAAA,GAAiB,IAE/BC,EAAUC,EAAAA,MAAY,YAA0B,IAAvBC,EAAK,EAALA,MAAOC,EAAO,EAAPA,QACtCC,QAAQC,IAAI,UACR,IAAMC,GACF,OAAIJ,GACCK,UACAjD,KAAI,SAAAkD,GAAC,OAAI,SAAC,EAAI,CAACZ,QAASY,EAAEZ,QAASC,UAAWW,EAAEC,YAAiBD,EAAEE,GAAK,IAKjF,OACI,iBAAKxD,UAAWC,EAAa,WACzB,wBAAI,aACL,SAACwD,EAAmB,CAACC,SANV,SAACC,GACfV,EAAQU,EAAOC,YACnB,KAKQ,gBAAK5D,UAAWC,EAAQ,SACnBmD,MAIjB,IAeMK,GAAsBI,EAAAA,EAAAA,GAAU,CAACC,KAAK,yBAAhBD,EAbE,SAAC7C,GAC3B,OACI,kBAAM0C,SAAU1C,EAAM+C,aAAa,WAC/B,0BACI,SAACC,EAAA,EAAK,CAACC,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,EAAUxB,GAAcyB,KAAM,cAAgBC,YAAa,0GAEtG,0BACI,4BAAQ,kFAIxB,IAIA,ICvBA,GAFyBC,EAAAA,EAAAA,KAfD,SAACC,GACrB,MAAO,CACHxB,MAAOwB,EAAMC,YAAYzB,MACzBY,YAAaY,EAAMC,YAAYb,YAEvC,IAC2B,SAACc,GACxB,MAAM,CACFzB,QAAS,SAACW,GACNc,GAASC,EAAAA,EAAAA,IAAef,GAC5B,EAIR,GACyBW,CAA6CzB,GCAtE,EAhBgB,SAAC9B,GAEb,OACI,4BACI,SAAC,EAAW,CACRe,QAASf,EAAMe,QACf6C,WAAY5D,EAAM4D,WAClBxD,OAAQJ,EAAMI,OACdS,aAAcb,EAAMa,aACpBgD,OAAQ7D,EAAM6D,UAElB,SAAC,EAAgB,MAG7B,E,UCZMC,EAAgB,qGA4BjB,OA5BiB,sCACrB,WACI,IAAIC,EAASC,KAAKhE,MAAMiE,MAAMC,OAAOH,OAEjCA,IAAQA,EAAOC,KAAKhE,MAAM4D,aACdI,KAAKhE,MAAMmE,QAAQC,KAAK,UAExCJ,KAAKhE,MAAMqE,eAAeN,GAC1BC,KAAKhE,MAAMsE,UAAUP,EACzB,GAAC,+BACE,WACJC,KAAKO,gBACD,GAAC,gCACD,SAAmBC,EAAWC,EAAWC,GAC7CV,KAAKO,gBACD,GAAC,oBAED,WAEI,OACI,0BACI,SAAC,GAAO,kBAAKP,KAAKhE,OAAK,IACde,QAASiD,KAAKhE,MAAMe,QACpBX,OAAU4D,KAAKhE,MAAMI,OACrBS,aAAgBmD,KAAKhE,MAAMa,iBAIhD,KAAC,EA5BiB,CAASkB,EAAAA,WA6C/B,GAAe4C,EAAAA,EAAAA,KACXpB,EAAAA,EAAAA,KAVoB,SAACC,GAAK,MAAM,CAChCzC,QAAQyC,EAAMC,YAAY1C,QAC1B6C,WAAWJ,EAAMoB,KAAKb,OACtB3D,OAAQoD,EAAMC,YAAYrD,OAC1ByD,OAAOL,EAAMoB,KAAKf,OACrB,GAK2B,CAACQ,eAAAA,EAAAA,GAAgBC,UAAAA,EAAAA,GAAWzD,aAAAA,EAAAA,KACpDgE,EAAAA,EAFJ,CAIEf,E","sources":["webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","webpack://my-app/./src/components/Profile/ProfileInfo/SocialNetwork/style.module.css?c385","components/Profile/ProfileInfo/SocialNetwork/IconsNetWork.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"ProfileInfo_card__g+YMw\",\"avatar\":\"ProfileInfo_avatar__xsSca\",\"descriptionCard\":\"ProfileInfo_descriptionCard__ibKOG\",\"descriptionInfo\":\"ProfileInfo_descriptionInfo__rIW5f\",\"fullName\":\"ProfileInfo_fullName__n7km1\",\"aboutMe\":\"ProfileInfo_aboutMe__bfSa3\",\"statusJob\":\"ProfileInfo_statusJob__JIoHM\"};","// extracted by mini-css-extract-plugin\nexport default {\"iconNetWork\":\"style_iconNetWork__x-Z8S\"};","import React from \"react\";\r\nimport facebook from \"../../../../assets/images/icons_social_network/icon-facebook.png\"\r\nimport website from \"../../../../assets/images/icons_social_network/icon-web.png\"\r\nimport vk from \"../../../../assets/images/icons_social_network/icon-vkontakte.png\"\r\nimport twitter from \"../../../../assets/images/icons_social_network/icon-twitter.png\"\r\nimport instagram from \"../../../../assets/images/icons_social_network/icon-instagram.png\"\r\nimport youtube from \"../../../../assets/images/icons_social_network/icon-youtube.png\"\r\nimport github from \"../../../../assets/images/icons_social_network/icon-github.png\"\r\n\r\nimport s from \"./style.module.css\"\r\nconst IconsNetWork = ({ contacts}) => {\r\n    const contactsNew = {...contacts}\r\n    for (const key in contactsNew) {\r\n        if (typeof contactsNew[key] != \"string\") {\r\n            delete contactsNew[key]\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className={s.iconNetWork}>\r\n                {Object.entries(contactsNew).map(elem => {\r\n                    switch(elem[0]){\r\n                        case \"facebook\":  return <a key={1} href={`https://${elem[1]}`}><img alt={\"facebook\"} src={facebook}/></a>\r\n                        case \"website\" : return <a key={2} href={`https://${elem[1]}`}><img alt={\"website\"} src={website}/></a>\r\n                        case \"twitter\" : return <a key={3} href={`https://${elem[1]}`}><img alt={\"twitter\"} src={twitter}/></a>\r\n                        case \"instagram\" : return <a key={4} href={`https://${elem[1]}`}><img alt={\"instagram\"} src={instagram}/></a>\r\n                        case \"youtube\" : return <a key={5} href={`https://${elem[1]}`}><img alt={\"youtube\"} src={youtube}/></a>\r\n                        case \"github\" : return <a key={6} href={`https://${elem[1]}`}><img alt={\"github\"} src={github}/></a>\r\n                        case \"vk\" : return <a key={7} href={`https://${elem[1]}`}><img alt={\"vk\"} src={vk}/></a>\r\n                    }\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default IconsNetWork","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode} >{props.status || \"No status\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} onBlur={deActivateEditMode} autoFocus={true}\r\n                           value={status}></input>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport searchJob from \"../../../assets/images/searchJob.png\"\r\nimport noSearchJob from \"../../../assets/images/noSearchJob.png\"\r\nimport userPhoto from \"../../../assets/images/default_avatar.png\";\r\n\r\nimport IconsNetWork from \"./SocialNetwork/IconsNetWork\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n\r\nif(!profile){\r\n    return <Preloader/>\r\n}\r\n    return (\r\n        <div >\r\n            <div className={s.descriptionCard}>\r\n                <img alt={\"avatar\"} className={s.avatar} src={profile.photos.large ? profile.photos.large : userPhoto}/>\r\n                <div className={s.descriptionInfo}>\r\n                    <span className={s.fullName}>{profile.fullName}</span>\r\n                    <ProfileStatusWithHooks\r\n                        status = {status}\r\n                        updateStatus = {updateStatus}\r\n                    />\r\n                    <span className={s.aboutMe}>{`Обо мне: ${profile.aboutMe}`}</span>\r\n                    <img alt={\"job\"} className={s.statusJob} src={ profile.lookingForAJob ? searchJob : noSearchJob}/>\r\n                    <IconsNetWork link={profile.contacts.twitter}\r\n                                  contacts={profile.contacts}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__IxGby\",\"posts\":\"MyPosts_posts__BI858\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__WW+c1\"};","import React from \"react\";\r\nimport s from './Post.module.css'\r\nconst Post = ({message, likeCount}) => {\r\n    return (\r\n            <div >\r\n                <div className={s.item}>\r\n                    <img src='https://cs14.pikabu.ru/avatars/100/x100707-1524323641.png' alt='avatar'/>\r\n                    {message}\r\n                    <div>\r\n                        <span>like: {likeCount}</span>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport { maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\n//const newPostElement = React.createRef() //создаем ссылку, привязываем ссылку к textarea\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = React.memo( ( {posts, addPost}  ) => {\r\nconsole.log(\"RENDER\")\r\n    const postsElements =\r\n        [...posts]\r\n            .reverse()\r\n            .map(p => <Post message={p.message} likeCount={p.likesCount} key={p.id}/>)\r\n\r\n    const onAddPost = (values) => {\r\n        addPost(values.newPostText)\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My post</h3>\r\n           <AddNewPostFormRedux onSubmit ={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport const AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength10]} name={\"newPostText\"}  placeholder={\"Введите новый пост\"} />\r\n            </div>\r\n            <div>\r\n                <button>Добавить пост</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form:\"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts","import React from \"react\";\r\nimport { addPostCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostCreator(newPostText))\r\n        }\r\n    }\r\n\r\n\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                authUserId={props.authUserId}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                isAuth={props.isAuth}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component  {\r\n refreshProfile(){\r\n     let userId = this.props.match.params.userId//берем id из url\r\n\r\n     if(!userId){userId=this.props.authUserId\r\n         if(!userId){this.props.history.push(\"/login\")}\r\n     }\r\n     this.props.getUserProfile(userId)\r\n     this.props.getStatus(userId)\r\n }\r\n    componentDidMount () {\r\nthis.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\nthis.refreshProfile()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status = {this.props.status}\r\n                         updateStatus = {this.props.updateStatus}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n// const AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n// const withUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile:state.profilePage.profile,\r\n    authUserId:state.auth.userId,\r\n    status: state.profilePage.status,\r\n    isAuth:state.auth.isAuth\r\n})\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer)"],"names":["contacts","contactsNew","key","className","s","Object","entries","map","elem","href","alt","src","facebook","website","twitter","instagram","youtube","github","vk","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","profile","photos","large","userPhoto","fullName","aboutMe","lookingForAJob","searchJob","noSearchJob","link","Preloader","message","likeCount","maxLength10","maxLengthCreator","MyPosts","React","posts","addPost","console","log","postsElements","reverse","p","likesCount","id","AddNewPostFormRedux","onSubmit","values","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","validate","required","name","placeholder","connect","state","profilePage","dispatch","addPostCreator","authUserId","isAuth","ProfileContainer","userId","this","match","params","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","withRouter"],"sourceRoot":""}